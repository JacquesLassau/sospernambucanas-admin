@{Layout = "~/Views/Shared/_Layout.cshtml";}
@model DLLsSosPernambucanas.DML.Denunciante
@{
    ViewBag.Title = "Edição do Denunciante";    
    string contexto = Url.Action("BuscarDenuncianteUI", "Denunciante");
}

<div class="container">
    <hr />
    <p class="fs-2 fw-lighter bg-light">Edição do Denunciante</p>
    <hr />
    @using (Html.BeginForm("EditarDenuncianteAR", "Denunciante", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.IdDenunciante)
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                <fieldset id="dadosGerais">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { type = "tel", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", value = Session["Senha"] } })
                            @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmaSenha, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmaSenha, new { htmlAttributes = new { @class = "form-control", value = Session["Senha"] } })
                            @Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
        <br />
        <div class="form-group">            
            <button class="btn btn-outline-success form-group" type="submit"><i class="fa fa-check"></i> Confirmar</button>
            <a onclick="RecarregaPagina()" class="btn btn-outline-primary form-group"><i class="fa fa-refresh"></i> Desfazer</a>
            <a href="@contexto" class="btn btn-outline-secondary form-group"><i class="fa fa-reply"></i></a>
        </div>
        @Html.AntiForgeryToken()
    }
</div>

@section Scripts {@Scripts.Render("~/bundles/jqueryval")}



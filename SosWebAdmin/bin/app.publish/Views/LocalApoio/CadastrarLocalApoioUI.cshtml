@{Layout = "~/Views/Shared/_Layout.cshtml";}
@model SosWebAdmin.Models.LocalApoio
@{
    ViewBag.Title = "Cadastro para Local de Apoio";
    string local = Url.Action("CadastrarLocalApoioUI", "LocalApoio");
    string contexto = Url.Action("Index", "Home");
}

<div class="container">
    <hr />
    <p class="fs-2 fw-lighter bg-light">Cadastro para Local de Apoio*</p>
    <hr />
    @using (Html.BeginForm("CadastrarLocalApoioAR", "LocalAPoio", FormMethod.Post))
    {
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                <fieldset id="dadosGerais">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumeroEndereco, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NumeroEndereco, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumeroEndereco, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Estado, new SelectList(new string[]
                            {
                                "Acre",
                                "Alagoas",
                                "Amapá",
                                "Amazonas",
                                "Bahia",
                                "Ceará",
                                "Distrito Federal",
                                "Espirito Santo",
                                "Goiás",
                                "Maranhão",
                                "Mato Grosso",
                                "Mato Grosso do Sul",
                                "Minas Gerais",
                                "Pará",
                                "Paraiba",
                                "Paraná",
                                "Pernambuco",
                                "Piauí",
                                "Rio de Janeiro",
                                "Rio Grande do Norte",
                                "Rio Grande do Sul",
                                "Rondônia",
                                "Roraima",
                                "Santa Catarina",
                                "São Paulo",
                                "Sergipe",
                                "Tocantis"
                            }), new { @class = "form-control form-select" })                            
                            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { type = "tel", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
        <br />
        <p>*O preenchimento desses dados é de inteira responsabilidade do atendente, pois as informações serão visualizadas pela(o) denunciante.</p>
        <div class="form-group">
            <button class="btn btn-outline-success form-group" type="submit"><i class="fa fa-check"></i> Confirmar</button>
            <a href="@local" class="btn btn-outline-danger form-group"><i class="fa fa-trash"></i> Limpar</a>
            <a href="@contexto" class="btn btn-outline-secondary form-group"><i class="fa fa-reply"></i></a>
        </div>
        @Html.AntiForgeryToken()
    }
</div>

@section Scripts {@Scripts.Render("~/bundles/jqueryval")}





